<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2009 (http://www.altova.com) by Ricardo Neto (Netpat) -->
<types xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="typeModelValidator.xsd">
	<platformTypes>
		<platformType name="boolean" maxLength="1" precision="1" scale="0"/>
		<platformType name="binary" maxLength="8000" precision="0" scale="0"/>
		<platformType name="string" maxLength="8000" precision="0" scale="0"/>
		<platformType name="datetime" maxLength="8" precision="23" scale="3"/>
		<platformType name="decimal" maxLength="17" precision="38" scale="38"/>
		<platformType name="double" maxLength="4" precision="24" scale="0"/>
		<platformType name="float" maxLength="8" precision="53" scale="0"/>
		<platformType name="long" maxLength="8" precision="19" scale="0"/>
		<platformType name="int" maxLength="4" precision="10" scale="0"/>
		<platformType name="short" maxLength="2" precision="5" scale="0"/>
		<platformType name="byte" maxLength="1" precision="3" scale="0"/>
	</platformTypes>
	<customTypes>
		<!-- Exemplos de tipos derivados de string -->
		<customType name="nif">
			<customString>
				<length>9</length>
			</customString>
		</customType>
		<customType name="matricula">
			<customString>
				<length>8</length>
				<pattern>([0-9]{2}-[0-9]{2}-[A-Z|a-z]{2})|([0-9]{2}-[A-Z|a-z]{2}-[0-9]{2})|([A-Z|a-z]{2}-[0-9]{2}-[0-9]{2})</pattern>
			</customString>
		</customType>
		<customType name="codPost">
			<customString>
				<length>8</length>
				<pattern>[0-9]{4} [0-9]{3}</pattern>
			</customString>
		</customType>
		<customType name="pontosCardeais">
			<customString>
				<enumeration>Norte</enumeration>
				<enumeration>Sul</enumeration>
				<enumeration>Este</enumeration>
				<enumeration>Oeste</enumeration>
			</customString>
		</customType>
		<customType name="char">
			<customString>
				<length>1</length>
			</customString>
		</customType>
		<!-- Exemplos de tipos derivados de long -->
		<customType name="int32">
			<customLong>
				<minInclusive>-2147483648</minInclusive>
				<maxInclusive>2147483647</maxInclusive>
			</customLong>
		</customType>
		<customType name="positiveInt">
			<customLong>
				<minInclusive>0</minInclusive>
				<maxInclusive>2147483647</maxInclusive>
			</customLong>
		</customType>
		<customType name="int16">
			<customLong>
				<minInclusive>-32768</minInclusive>
				<maxInclusive>32767</maxInclusive>
			</customLong>
		</customType>
		<customType name="int8">
			<customLong>
				<minInclusive>-128</minInclusive>
				<maxInclusive>127</maxInclusive>
			</customLong>
		</customType>
		<!-- Exemplos de tipos derivados de binary -->
		<customType name="4byteStream">
			<customBinary>
				<length>4</length>
			</customBinary>
		</customType>
		<!-- Exemplos de tipos derivados de decimal -->
		<customType name="preco">
			<customDecimal>
				<fractionDigits>2</fractionDigits>
				<minExclusive>0</minExclusive>
			</customDecimal>
		</customType>
		<!-- Exemplos de tipos derivados de float -->
		<customType name="taxas">
			<customFloat>
				<minInclusive>0</minInclusive>
				<maxInclusive>7.2323</maxInclusive>
			</customFloat>
		</customType>
		<!-- Exemplos de tipos derivados de double -->
		<customType name="larguraInfima">
			<customFloat>
				<minInclusive>0</minInclusive>
				<maxInclusive>0.45E-9</maxInclusive>
			</customFloat>
		</customType>
		<!-- Exemplos de tipos derivados de datetime -->
		<customType name="primeiroSemestre">
			<customDatetime>
				<minInclusive>2010-01-01T00:00:00</minInclusive>
				<maxInclusive>2010-06-30T23:59:00</maxInclusive>
			</customDatetime>
		</customType>
		<customType name="junho">
			<customDatetime>
				<pattern>2010-06-([0-2]{1}[0-9]{1}|30)T00:00:00</pattern>
			</customDatetime>
		</customType>
	</customTypes>
</types>
