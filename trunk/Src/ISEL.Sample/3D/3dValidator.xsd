<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2010 (http://www.altova.com) by Ricardo Neto (Netpat) -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">

	<!-- ================== ENUMERADOS REFERENTES A CARDINALIDADE ================== -->
	<!-- Definição do enumerado correspondente à cardinalidade -->
	<xs:simpleType name="t_zeroOrOne">
		<xs:restriction base="xs:int">
			<xs:minInclusive value="0"/>
			<xs:maxInclusive value="1"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- Definição do enumerado correspondente à cardinalidade -->
	<xs:simpleType name="t_zeroOrMany">
		<xs:union>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="unbounded"/>
				</xs:restriction>
			</xs:simpleType>
			<xs:simpleType>
				<xs:restriction base="xs:int">
					<xs:minInclusive value="0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:union>
	</xs:simpleType>
	<!-- Definição do enumerado correspondente à cardinalidade -->
	<xs:simpleType name="t_oneOrMany">
		<xs:union>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="unbounded"/>
				</xs:restriction>
			</xs:simpleType>
			<xs:simpleType>
				<xs:restriction base="xs:int">
					<xs:minInclusive value="1"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:union>
	</xs:simpleType>
	<!-- Definição do enumerado correspondente à cardinalidade -->
	<xs:simpleType name="t_one">
		<xs:restriction base="xs:int">
			<xs:enumeration value="1"/>
		</xs:restriction>
	</xs:simpleType>




	<!-- ================== VALIDAÇÃO DE TIPOS ================== -->
	<!-- Definição do tipo LONG -->
	<xs:complexType name="t_Long">
		<xs:sequence>
			<xs:element name="enumeration" type="xs:long" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="totalDigits" type="xs:positiveInteger" use="optional"/>
		<xs:attribute name="pattern" type="xs:string" use="optional"/>
		<xs:attribute name="minInclusive" type="xs:long" use="optional"/>
		<xs:attribute name="minExclusive" type="xs:long" use="optional"/>
		<xs:attribute name="maxInclusive" type="xs:long" use="optional"/>
		<xs:attribute name="maxExclusive" type="xs:long" use="optional"/>
	</xs:complexType>
	<!-- Definição do tipo INT -->
	<xs:complexType name="t_Int">
		<xs:sequence>
			<xs:element name="enumeration" type="xs:int" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="totalDigits" type="xs:positiveInteger" use="optional"/>
		<xs:attribute name="pattern" type="xs:string" use="optional"/>
		<xs:attribute name="minInclusive" type="xs:int" use="optional"/>
		<xs:attribute name="minExclusive" type="xs:int" use="optional"/>
		<xs:attribute name="maxInclusive" type="xs:int" use="optional"/>
		<xs:attribute name="maxExclusive" type="xs:int" use="optional"/>
	</xs:complexType>
	<!-- Definição do tipo SHORT -->
	<xs:complexType name="t_Short">
		<xs:sequence>
			<xs:element name="enumeration" type="xs:short" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="totalDigits" type="xs:positiveInteger" use="optional"/>
		<xs:attribute name="pattern" type="xs:string" use="optional"/>
		<xs:attribute name="minInclusive" type="xs:short" use="optional"/>
		<xs:attribute name="minExclusive" type="xs:short" use="optional"/>
		<xs:attribute name="maxInclusive" type="xs:short" use="optional"/>
		<xs:attribute name="maxExclusive" type="xs:short" use="optional"/>
	</xs:complexType>
	<!-- Definição do tipo BYTE -->
	<xs:complexType name="t_Byte">
		<xs:sequence>
			<xs:element name="enumeration" type="xs:byte" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="totalDigits" type="xs:positiveInteger" use="optional"/>
		<xs:attribute name="pattern" type="xs:string" use="optional"/>
		<xs:attribute name="minInclusive" type="xs:byte" use="optional"/>
		<xs:attribute name="minExclusive" type="xs:byte" use="optional"/>
		<xs:attribute name="maxInclusive" type="xs:byte" use="optional"/>
		<xs:attribute name="maxExclusive" type="xs:byte" use="optional"/>
	</xs:complexType>
	<!-- Definição do tipo BINARY -->
	<xs:complexType name="t_Binary">
		<xs:sequence>
			<xs:element name="enumeration" type="xs:hexBinary" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="length" type="xs:positiveInteger" use="optional"/>
		<xs:attribute name="minLength" type="xs:positiveInteger" use="optional"/>
		<xs:attribute name="maxLength" type="xs:positiveInteger" use="optional"/>
		<xs:attribute name="pattern" type="xs:string" use="optional"/>
	</xs:complexType>
	<!-- Definição do tipo DECIMAL -->
	<xs:complexType name="t_Decimal">
		<xs:sequence>
			<xs:element name="enumeration" type="xs:decimal" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="totalDigits" type="xs:positiveInteger" use="optional"/>
		<xs:attribute name="fractionDigits" type="xs:positiveInteger" use="optional"/>
		<xs:attribute name="pattern" type="xs:string" use="optional"/>
		<xs:attribute name="minInclusive" type="xs:decimal" use="optional"/>
		<xs:attribute name="minExclusive" type="xs:decimal" use="optional"/>
		<xs:attribute name="maxInclusive" type="xs:decimal" use="optional"/>
		<xs:attribute name="maxExclusive" type="xs:decimal" use="optional"/>
	</xs:complexType>
	<!-- Definição do tipo FLOAT -->
	<xs:complexType name="t_Float">
		<xs:sequence>
			<xs:element name="enumeration" type="xs:float" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="pattern" type="xs:string" use="optional"/>
		<xs:attribute name="minInclusive" type="xs:float" use="optional"/>
		<xs:attribute name="minExclusive" type="xs:float" use="optional"/>
		<xs:attribute name="maxInclusive" type="xs:float" use="optional"/>
		<xs:attribute name="maxExclusive" type="xs:float" use="optional"/>
	</xs:complexType>
	<!-- Definição do tipo DOUBLE -->
	<xs:complexType name="t_Double">
		<xs:sequence>
			<xs:element name="enumeration" type="xs:double" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="pattern" type="xs:string" use="optional"/>
		<xs:attribute name="minInclusive" type="xs:double" use="optional"/>
		<xs:attribute name="minExclusive" type="xs:double" use="optional"/>
		<xs:attribute name="maxInclusive" type="xs:double" use="optional"/>
		<xs:attribute name="maxExclusive" type="xs:double" use="optional"/>
	</xs:complexType>
	<!-- Definição do tipo STRING -->
	<xs:complexType name="t_String">
		<xs:sequence>
			<xs:element name="enumeration" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="length" type="xs:positiveInteger" use="optional"/>
		<xs:attribute name="minLength" type="xs:positiveInteger" use="optional"/>
		<xs:attribute name="maxLength" type="xs:positiveInteger" use="optional"/>
		<xs:attribute name="pattern" type="xs:string" use="optional"/>
	</xs:complexType>
	<!-- Definição do tipo DATETIME -->
	<xs:complexType name="t_Datetime">
		<xs:sequence>
			<xs:element name="enumeration" type="xs:dateTime" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="pattern" type="xs:string" use="optional"/>
		<xs:attribute name="minInclusive" type="xs:dateTime" use="optional"/>
		<xs:attribute name="minExclusive" type="xs:dateTime" use="optional"/>
		<xs:attribute name="maxInclusive" type="xs:dateTime" use="optional"/>
		<xs:attribute name="maxExclusive" type="xs:dateTime" use="optional"/>
	</xs:complexType>
	<!-- Definição do tipo BOOLEAN-->
	<xs:complexType name="t_Boolean">
		<xs:attribute name="name" type="xs:string" use="required"/>
	</xs:complexType>
	<!-- Definição do contentor de USER TYPES -->
	<xs:complexType name="t_userType">
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:choice>
				<xs:element name="long" type="t_Long" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element name="int" type="t_Int" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element name="short" type="t_Short" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element name="byte" type="t_Byte" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element name="binary" type="t_Binary" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element name="boolean" type="t_Boolean" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element name="decimal" type="t_Decimal" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element name="float" type="t_Float" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element name="double" type="t_Double" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element name="string" type="t_String" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element name="DateTime" type="t_Datetime" minOccurs="0" maxOccurs="unbounded"/>
			</xs:choice>
		</xs:sequence>
		<xs:attribute name="generatedFileName" type="xs:string" use="required"/>
	</xs:complexType>
	
	<!-- ================== VALIDAÇÃO DE ENTIDADES ================== -->
	<!-- Definição do enumerado correspondente ao tipo de entidade -->
	<xs:simpleType name="t_entityType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="abstract"/>
			<xs:enumeration value="base"/>
			<xs:enumeration value="dependent"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- Definição do tipo que representa um campo -->
	<xs:complexType name="t_field">
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="type" type="xs:string" use="required"/>
		<xs:attribute name="unique" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="visible" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="nillable" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="sequence" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="searchable" type="xs:boolean" use="optional" default="false"/>
	</xs:complexType>
	<!-- Definição do tipo que representa um contentor de campos -->
	<xs:complexType name="t_fieldContainer">
		<xs:sequence>
			<xs:element name="field" type="t_field" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<!-- Definição do elemento que representa uma relação 1-1 -->
	<xs:complexType name="t_oneToOne_relation">
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="entity" type="xs:string" use="required"/>
		<xs:attribute name="minOccurs" type="t_one" use="required"/>
		<xs:attribute name="maxOccurs" type="t_one" use="required"/>
	</xs:complexType>
	<!-- Definição do elemento que representa uma relação 1-n -->
	<xs:complexType name="t_oneToMany_relation">
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="entity" type="xs:string" use="required"/>
		<xs:attribute name="minOccurs" type="t_zeroOrOne" use="required"/>
		<xs:attribute name="maxOccurs" type="t_oneOrMany" use="required"/>
	</xs:complexType>
	<!-- Definição do elemento que representa uma relação n-n -->
	<xs:complexType name="t_manyToMany_relation">
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="entity" type="xs:string" use="required"/>
		<xs:attribute name="minOccurs" type="t_zeroOrOne" use="required"/>
		<xs:attribute name="maxOccurs" type="t_oneOrMany" use="required"/>
	</xs:complexType>
	<!-- Definição do elemento que representa o contentor de relações -->
	<xs:complexType name="t_relations">
		<xs:sequence maxOccurs="unbounded">
			<xs:choice>
				<xs:element name="oneToOne" type="t_oneToOne_relation"/>
				<xs:element name="oneToMany" type="t_oneToMany_relation"/>
				<xs:element name="manyToMany" type="t_manyToMany_relation"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<!-- Definição do elemento que representa uma entidade -->
	<xs:complexType name="t_entity">
		<xs:sequence>
			<xs:element name="fields" type="t_fieldContainer">
				<xs:unique name="un_fieldName">
					<xs:selector xpath="field"/>
					<xs:field xpath="@name"/>
				</xs:unique>
			</xs:element>
			<xs:element name="relations" type="t_relations" minOccurs="0">
				<xs:unique name="un_relationName">
					<xs:selector xpath="*"/>
					<xs:field xpath="@name"/>
				</xs:unique>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="generatedFileName" type="xs:string" use="required"/>
		<xs:attribute name="type" type="t_entityType" use="required"/>
		<xs:attribute name="baseEntity" use="optional"/>
	</xs:complexType>
	
	<!-- ================== VALIDAÇÃO DE ENVIRONMENTS ================== -->
	<!-- Definição do tipo que representa o tipo de provider utiilzado -->
	<xs:simpleType name="t_serverType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="MsSql2000"/>
			<xs:enumeration value="MsSql2005"/>
			<xs:enumeration value="MsSql2008"/>
			<xs:enumeration value="MsSqlCe"/>
			<xs:enumeration value="MySQL"/>
			<xs:enumeration value="MySQL5"/>
			<xs:enumeration value="PostgreSQL"/>
			<xs:enumeration value="Informix"/>
			<xs:enumeration value="Ingres"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- Definição do tipo que representa um contentor de data environments -->
	<xs:complexType name="t_dataEnvContainer">
		<xs:sequence>
			<xs:element name="provider" type="t_Provider"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="t_Provider">
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="type" type="t_serverType" use="required"/>
		<xs:attribute name="connectionString" type="xs:string" use="required"/>
		<xs:attribute name="serverName" type="xs:string" use="required"/>
		<xs:attribute name="instance" type="xs:string" use="required"/>
		<xs:attribute name="catalog" type="xs:string" use="required"/>
		<xs:attribute name="port" type="xs:short" use="optional" default="1433"/>
		<xs:attribute name="username" type="xs:string" use="required"/>
		<xs:attribute name="password" type="xs:string" use="required"/>
		<xs:attribute name="security" type="xs:string" use="optional"/>
		<xs:attribute name="timeout" type="xs:short" use="optional" default="120"/>
	</xs:complexType>
	<!-- Definição do elemento que representa um contentor de environments -->
	<xs:complexType name="t_environments">
		<xs:sequence>
			<xs:element name="dataEnvironments" type="t_dataEnvContainer">
				<xs:unique name="un_sqlProviderName">
					<xs:selector xpath="*"/>
					<xs:field xpath="@name"/>
				</xs:unique>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	

	<!-- ================== VALIDAÇÃO DE BUSINESS PROCESSES ================== -->
	<!-- Definição do tipo que representa um parâmetro -->
	<xs:complexType name="t_param">
		<xs:attribute name="type" type="xs:string" use="required"/>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="minOccurs" type="t_one" use="optional" default="1"/>
		<xs:attribute name="maxOccurs" type="t_oneOrMany" use="optional" default="1"/>
	</xs:complexType>
	<!-- Definição do tipo que representa o conjunto de params -->
	<xs:complexType name="t_input">
		<xs:sequence>
			<xs:element name="param" type="t_param" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<!-- Definição do tipo que representa um parâmetro -->
	<xs:complexType name="t_output">
		<xs:attribute name="type" type="xs:string" use="required"/>
		<xs:attribute name="minOccurs" type="t_zeroOrMany" use="optional" default="1"/>
		<xs:attribute name="maxOccurs" type="t_zeroOrMany" use="optional" default="1"/>
	</xs:complexType>
	<!-- Definição do elemento que representa um business process -->
	<xs:complexType name="t_businessProcess">
		<xs:sequence>
			<xs:element name="input" type="t_input">
				<xs:unique name="un_paramName">
					<xs:selector xpath="param"/>
					<xs:field xpath="@name"/>
				</xs:unique>
			</xs:element>
			<xs:element name="output" type="t_output" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="description" type="xs:string" use="required"/>
	</xs:complexType>
	<!-- Definição do elemento que representa um conjunto de business processes -->
	<xs:complexType name="t_component">
		<xs:sequence>
			<xs:element name="businessProcess" type="t_businessProcess" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required"/>
	</xs:complexType>
	<!-- Definição do elemento que representa todos os conjuntos de business processes -->
	<xs:complexType name="t_businessProcesses">
		<xs:sequence>
			<xs:element name="component" type="t_component" minOccurs="1" maxOccurs="unbounded">
				<xs:unique name="un_busProcName">
					<xs:selector xpath="businessProcess"/>
					<xs:field xpath="@name"/>
				</xs:unique>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	
	
	
	<!-- ================== VALIDAÇÃO GERAL DO DICIONÁRIO ================== -->
	<!-- Definição do elemento SOLUTION -->
	<xs:element name="solution">
		<xs:complexType>
			<xs:sequence>
				<!-- Definição do elemento USERTYPES -->
				<xs:element name="userTypes" type="t_userType">
					<xs:unique name="un_platformType_name">
						<xs:selector xpath="*"/>
						<xs:field xpath="@name"/>
					</xs:unique>
				</xs:element>
				<!-- Definição do elemento ENVIRONMENTS -->
				<xs:element name="environments" type="t_environments" minOccurs="0"/>
				<!-- Definição do elemento BUSINESSPROCESSES -->
				<xs:element name="businessProcesses" type="t_businessProcesses" minOccurs="0">
					<xs:unique name="un_componentName">
						<xs:selector xpath="component"/>
						<xs:field xpath="@name"/>
					</xs:unique>
				</xs:element>
				<!-- Definição do elemento ENTITIES -->
				<xs:element name="entities">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="entity" type="t_entity" maxOccurs="unbounded"/>
						</xs:sequence>
					</xs:complexType>
					<!-- Restrição de unicidade ao nome da entidade-->
					<xs:unique name="un_entityName">
						<xs:selector xpath="entity"/>
						<xs:field xpath="@name"/>
					</xs:unique>
					<!-- Restrição referencial do atributo baseType de entity para nome de entity existente -->
					<xs:key name="entityName">
						<xs:selector xpath="entity"/>
						<xs:field xpath="@name"/>
					</xs:key>
					<xs:keyref name="refEntityName" refer="entityName">
						<xs:selector xpath="entity"/>
						<xs:field xpath="@baseEntity"/>
					</xs:keyref>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="companyName" type="xs:string" use="required"/>
			<xs:attribute name="projectName" type="xs:string" use="required"/>
		</xs:complexType>
		<!-- Restrição referencial do atributo type de field para nome de tipo existente -->
		<xs:key name="typeName">
			<xs:selector xpath="userTypes/*"/>
			<xs:field xpath="@name"/>
		</xs:key>
		<xs:keyref name="refTypeName_EntityField" refer="typeName">
			<xs:selector xpath="entities/entity/fields/field"/>
			<xs:field xpath="@type"/>
		</xs:keyref>
		<xs:keyref name="refTypeName_BusProcParam" refer="typeName">
			<xs:selector xpath="businesProcesses/component/businesProcess/input/param"/>
			<xs:field xpath="@type"/>
		</xs:keyref>
	</xs:element>
</xs:schema>
